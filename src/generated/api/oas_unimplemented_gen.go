// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// RaftGetVertex implements raftGetVertex operation.
//
// Получает вершину из указанной таблицы.
//
// GET /raft/vertices
func (UnimplementedHandler) RaftGetVertex(ctx context.Context, params RaftGetVertexParams) (r RaftGetVertexRes, _ error) {
	return r, ht.ErrNotImplemented
}

// RaftInsertEdge implements raftInsertEdge operation.
//
// Создаёт ребро в указанной таблице. from/to —
// идентификаторы вершин (UUID).
//
// POST /raft/edges
func (UnimplementedHandler) RaftInsertEdge(ctx context.Context, req *InsertEdgeRequest) (r RaftInsertEdgeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// RaftInsertEdges implements raftInsertEdges operation.
//
// Пакетная вставка рёбер в одну таблицу.
//
// POST /raft/edges/batch
func (UnimplementedHandler) RaftInsertEdges(ctx context.Context, req *InsertEdgesRequest) (r RaftInsertEdgesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// RaftInsertVertex implements raftInsertVertex operation.
//
// Создаёт вершину в указанной таблице.
//
// POST /raft/vertices
func (UnimplementedHandler) RaftInsertVertex(ctx context.Context, req *InsertVertexRequest) (r RaftInsertVertexRes, _ error) {
	return r, ht.ErrNotImplemented
}

// RaftInsertVertices implements raftInsertVertices operation.
//
// Пакетная вставка нескольких вершин в одну таблицу.
//
// POST /raft/vertices/batch
func (UnimplementedHandler) RaftInsertVertices(ctx context.Context, req *InsertVerticesRequest) (r RaftInsertVerticesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *ErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorStatusCode) {
	r = new(ErrorStatusCode)
	return r
}
